<template>
    <div class="c">
      <div class="box">
        <div class="i1"></div>
        <div class="i2">
          <div class="title">
            <img src="@/assets/imgs/login_8.0.png" alt="">
          </div>
          <div class="contain">
            <div class="t">登录</div>
            <div class="user">
              <div class="ico">
                <img src="@/assets/imgs/user.png" alt="">
              </div>
              <input type="text" placeholder="请输入您的账号" v-model="username">
            </div>
            <div class="user pw">
              <div class="ico">
                <img src="@/assets/imgs/pw.png" alt="">
              </div>
              <input type="password" placeholder="请输入您的密码" v-model="password" @keyup.enter="login">
            </div>
            <div class="liji" @click="login">
              {{loginStatus}}<i v-if="loading" class="el-icon-loading"></i>
            </div>
          </div>
        </div>
      </div>
      <div class="coright">
        ©金卡旗下北京银证出品 2018
      </div>
    </div>
</template>

<script>
    export default {
        name: "login_",
        data(){
          return{
            username:"",
            password:"",
            loginStatus:"立即登入",
            loading:false,
          }
        },
        computed:{
        },
        methods:{
          login(){
            if(this.loginStatus=="正在登入"){
              return;
            }
            this.loginStatus = "正在登入";
            this.loading = true;
            this.axios({
              method:"post",
              url:"/login",
              params:{
                username:this.username,
                password:this.password
              }
            }).then((res)=>{
              if(res.data.status == "success"){
                this.$root.clearUser();
                this.getMenu(() => {
                  this.$message.success("登录成功！");
                  this.$router.push("/home");
                  this.loginStatus = "立即登入";
                  this.loading = false;
                });
              }else{
                this.$message.error(res.data.msg);
                this.loginStatus = "立即登入";
                this.loading = false;
              }
            })
          },
          getMenu(callback){
            this.axios({
              method:"get",
              url:"/config/sysmenu",
            }).then((res)=>{
              let a = res.data;
              // 菜单测试数据
              // a = [
              //   {iconCls:"menu_3",name:"工单信息",children:[{component:"workOrder",path:"/workOrder",name:"新建工单"}]},
              //   {iconCls:"menu_7",name:"微信聊天",children:[{component:"weChat",name:"微信聊天",path:"/weChat"}]},
              //   {iconCls:"menu_5",name:"通话记录",children:[{component:"callRecords",name:"通话记录",path:"/callRecords"}]},
              //   {iconCls:"menu_3",name:"留言记录",children:[{component:"messageRecord",name:"留言记录",path:"/messageRecord"}]},
              //   {iconCls:"menu_4",name:"坐席监控",children:[{component:"agentMonitoring",name:"坐席监控",path:"/agentMonitoring"}]},
              //   {iconCls:"menu_8",name:"工单列表",children:[{component:"workOrderList",name:"工单列表",path:"/workOrderList"}]},
              //   {iconCls:"menu_8",name:"知识库管理",children:[{component:"knowledgeBase",name:"知识库管理",path:"/knowledgeBase"}]},
              // ]
              //存放权限列表的数组
              let bArr = [];
              //菜单列表
              let menuList = [];
              let arrT = [];//临时变量
              a.forEach((i1) => {
                let arrT = [];
                i1.children.forEach((i2) => {
                  if(i2.component){
                    bArr.push(i2.component);
                  }
                  arrT.push({path:i2.path,title:i2.name});
                })
                menuList.push({img:require("@/assets/imgs/"+i1.iconCls+".png"),title:i1.name,children:arrT});
              })
              //更新菜单列表
              this.$store.state.menuList = menuList;
              window.sessionStorage.setItem('menuList', JSON.stringify(menuList));
              let objTemp = {};
              bArr.forEach((i) => {
                objTemp[i] = true
              })
              //需要修改的在后面追加
              objTemp = {
                ...objTemp,login:true,index:true,home:true,
                articleDetail:true,addArticle:true,
                changeArticle:true
              }
              //更新权限列表
              this.$store.state.authList = objTemp;
              window.sessionStorage.setItem('authList', JSON.stringify(objTemp));
            })
            if(typeof (callback) == "function"){
              callback();
            }
          },
        },
        mounted(){

        }
    }
</script>

<style lang="scss" scoped>
  @mixin wh100{
    width:100%;
    height:100%;
  }
  @mixin flex-z{
    display: flex;
    justify-content: center;
    align-items: center;
  }
  @mixin cur{
    cursor: pointer;
  }
  .c{
    @include wh100;
    position:relative;
    background:linear-gradient(180deg,rgba(114,150,236,1) 0%,rgba(41,79,192,1) 100%);
    .box{
      width:65%;
      height:66.7%;
      position:absolute;
      top:0;
      right:0;
      left:0;
      bottom:0;
      margin:auto;
      .i1{
        float: left;
        width:56.8%;
        height:100%;
        background:url("../assets/imgs/login_bg.png") no-repeat;
        background-size:100% 100%;
      }
      .i2{
        @extend .i1;
        width:43.2%;
        background: #fff;
        .title{
          @include flex-z;
          height:16%;
          background:rgba(240,240,240,1);
          img{
            height:26%;
            width:auto;
          }
        }
        .contain{
          height:84%;
          position:relative;
          .t{
            @include flex-z;
            width:100%;
            text-align: center;
            height:21%;
            font-size: 24px;
            color:#333;
          }
        }
      }
    }
    .coright{
      width:100%;
      height:20px;
      line-height: 20px;
      font-size: 14px;
      text-align: center;
      position: absolute;
      bottom:7.4%;
      color:#fff;
    }
    .user{
      width:74%;
      height:9.6%;
      position:absolute;
      top:21%;
      left:0;right:0;
      margin:0 auto;
      .ico{
        @include flex-z;
        width:12.5%;
        height:100%;
        float: left;
        background: #d9d9d9;
        img{
          width:64%;
        }
      }
      input{
        background: #F0F0F0;
        height:100%;
        width:87.5%;
        border:none;
        box-sizing: border-box;
        outline:none;
        font-size: 16px;
        padding-left:5%;
      }
      input::-webkit-input-placeholder{
        color:#b3b3b3;
        font-size: 16px;
      }
    }
    .pw{
      top:43.5%;
    }
    .liji{
      @include flex-z;
      width:74%;
      height:9.6%;
      position:absolute;
      bottom:17.3%;
      left:0;right:0;
      margin:0 auto;
      background: #799AFA;
      color:#fff;
      font-size: 18px;
      @include cur;
    }
  }
</style>
