<template>
    <div class="c" ref="parent">
      <vue-scroll :ops="ops" ref="vs" @mousewheel.native="wheel">
        <ul class="ulist" ref="child">
          <li :class="activeTitle==-1?'active':''" @click="goRoute(-1,'/home')">系统首页</li>
          <li v-for="(item,index) in tabList" :class="activeTitle==item.title?'active':''" @click="goRoute(item.title,item.path)">
            {{item.title}}
            <div class="img" @click.stop="close(item.title)">
              <img src="@/assets/imgs/closeTab.png" v-if="activeTitle==item.title">
              <img src="@/assets/imgs/closeTab2.png" v-else>
            </div>
          </li>
        </ul>
      </vue-scroll>
    </div>
</template>

<script>
    export default {
        name: "tab-views",
        data(){
          return{
            ops:{
              bar: {
                background: "rgba(144,147,153,.3)",
                onlyShowBarOnScroll: false,
              },
            },
            wheelCout:0,
            maxCount:100,
            newVal:false,
          }
        },
        computed:{
          tabList(){
            return this.$store.state.tabViews;
          },
          activeTitle:{
            get: function () {
              return this.newVal?this.newVal:this.$store.state.menu2Active;
            },
            set: function (newVal) {
              this.newVal = newVal;
            }
          }
        },
        methods:{
          goRoute(title,path){
            this.activeTitle = title;
            this.$store.commit("cactiveTitle2",title);
          },
          close(title){
            let curTabs = this.$store.state.tabViews;
            let a = curTabs.findIndex((value) => {
              return value.title == title;
            })
            curTabs.splice(a,1)
            this.$store.commit("changeTabViews",curTabs)
            //关闭标签为当前激活标签
            if(this.activeTitle == title){
              if(curTabs.length > a){
                this.activeTitle = curTabs[a].title;
                this.$store.commit("cactiveTitle2",curTabs[a].title);
              }else if(curTabs.length == 0) {
                //只剩一个标签时
                this.activeTitle = -1;
                this.$store.commit("cactiveTitle2",-1);
              }else{
                this.activeTitle = curTabs[a-1].title;
                this.$store.commit("cactiveTitle2",curTabs[a-1].title);
              }
            }
          },
          wheel(e){
            this.maxCount = this.$refs.child.offsetWidth - this.$refs.parent.offsetWidth;
            this.wheelCout = this.wheelCout+e.deltaY;
            if(this.wheelCout<0){this.wheelCout=0}
            if(this.wheelCout>this.maxCount){this.wheelCout=this.maxCount+5}
            this.$refs['vs'].scrollTo({
              x: this.wheelCout,
            })
          }
        },
        mounted(){
          this.maxCount = this.$refs.child.offsetWidth - this.$refs.parent.offsetWidth;
        }
    }
</script>

<style scoped>
  .c{
    height:36px;
    width:100%;
    overflow: hidden;
  }
  .ulist{
    height:36px;
    display: flex;
    flex-wrap: nowrap;
  }
  .ulist li{
    float: left;
    width:120px;
    height:100%;
    border:1px solid #D9D9D9;
    box-sizing: border-box;
    background: #E6E6E6;
    color:#666;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    position: relative;
  }
  .ulist li.active{
    background: #799AFA;
    color:#fff;
  }
  .ulist li .img{
    height:100%;
    width:15px;
    position: absolute;
    right:0;
    display: flex;
    visibility: hidden;
    justify-content: center;
    align-items: center;
  }
  .ulist li:hover .img{
    visibility: visible;
  }
</style>
