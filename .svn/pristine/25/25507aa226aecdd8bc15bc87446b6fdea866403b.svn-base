<template>
  <div class="con">
    <div class="con_icon">
       <Input  icon="ios-search" placeholder="搜索用户" v-model="searchValue" style="width: 200px;float:left;margin-left:200px"/>
       <Button type="primary" icon="ios-search" style="float:left;margin-left:20px" @click="serach">搜索</Button>
       <Button type="primary"  style="float:right" @click="addUser"><Icon type="md-add" />添加用户</Button>
    </div>
    <div class="con_table">
      <!-- <Page :total="10" > -->
      <Table style="width:100%;height:65%;border:0px"  border :columns="columns2" :data="testCol" placement="top" show-elevator class="userTable" no-filtered-data-text></Table>
      <div style="margin: 10px;overflow: hidden">
        <div style="float: right;">
            <Page :total="reshuserLength" :current="1" @on-change="changePage" :page-size="pageSize"	></Page>
        </div>
      </div>
    </div>
    <!-- 用户信息修改 -->
    <Modal
        v-model="modal1"
        title="用户信息修改"
        @on-ok="ok(changeForm)"
        @on-cancel="cancel" width="90%">
        <Form  ref="changeForm" :model="changeForm" :rules="ruleValidate" :label-width="80" inline>
          <FormItem label="用户名" prop="name">
              <Input  placeholder="请输入用户名" v-model="changeForm.name"></Input>
          </FormItem>
          <FormItem label="角色名称" prop="roleName">
              <Input  placeholder="请输入角色名称" v-model="changeForm.roleName" disabled></Input>
          </FormItem>
          <FormItem label="地址" prop="address">
              <Input  placeholder="请输入地址" v-model="changeForm.address"></Input>
          </FormItem>
          <FormItem label="联系方式" prop="phone">
              <Input  placeholder="请输入联系方式" v-model="changeForm.phone"></Input>
          </FormItem>
          <!-- <FormItem label="用户状态" prop="enabled">
              <Input  placeholder="请输入用户状态" v-model="changeForm.enabled"></Input>
          </FormItem> -->
          <FormItem label="备注" prop="remark">
              <Input  placeholder="请输入备注" v-model="changeForm.remark"></Input>
          </FormItem>
        </Form>
    </Modal>
     <!-- 添加用户 -->
    <Modal
        v-model="modal2"
        title="添加用户信息"
        @on-ok="addUserOk(addUserInfo)"
        @on-cancel="addUserCancel" width="90%">
        <Form  ref="addUserInfo" :model="addUserInfo" :rules="ruleValidate" :label-width="80" inline>
          <FormItem label="用户名" prop="name">
              <Input  placeholder="请输入用户名" v-model="addUserInfo.name"></Input>
          </FormItem>
           <!-- <FormItem label="密码" prop="password">
              <Input  placeholder="请输入密码" v-model="addUserInfo.password"></Input>
          </FormItem> -->
          <FormItem label="角色名称" prop="roleName">
              <Input  placeholder="请输入角色名称" v-model="addUserInfo.roleName"></Input>
          </FormItem>
          <FormItem label="地址" prop="address">
              <Input  placeholder="请输入地址" v-model="addUserInfo.address"></Input>
          </FormItem>
          <FormItem label="联系方式" prop="phone">
              <Input  placeholder="请输入联系方式" v-model="addUserInfo.phone"></Input>
          </FormItem>
          <!-- <FormItem label="用户状态" prop="enabled">
              <Input  placeholder="请输入用户状态" v-model="addUserInfo.enabled"></Input>
          </FormItem> -->
          <FormItem label="备注" prop="remark">
              <Input  placeholder="请输入备注" v-model="addUserInfo.remark"></Input>
          </FormItem>
        </Form>
    </Modal>
  </div>
</template>

<script>
export default {
  name: 'basicInfo',
  data () {
            return {
                testCol:[
                    {
                      name:'jk',
                      roleName:'管理员',
                      address:"金卡集团",
                      phone:'88888888'
                    }
                ], //表格每页最多几行数据
                pageSize:4,
                modal1: false,
                modal2: false,
                modal3: false,
                searchValue:"",
                deleteIndex:"",
                changeForm:{
                  name: '',
                  roleName: '',
                  address:'',
                  phone:'',
                  enabled:'',
                //   homepage:'',
                  remark:''
                },
                addUserInfo:{
                  name: '',
                  roleName: '',
                  address:'',
                  phone:'',
                  enabled:'',
                //   homepage:'',
                  remark:'',
                  password:''
                },
                ruleValidate: {
                    name: [
                        { required: true, message: '姓名不能为空', trigger: 'blur' }
                    ],
                    password: [
                        { required: true, message: '密码不能为空', trigger: 'blur' }
                    ],
                    roleName: [
                        { required: true, message: '角色不能为空', trigger: 'blur' },
                    ],
                    address: [
                        { required: true, message: '地址不能为空', trigger: 'blur' }
                    ],
                    phone: [
                        { required: true, message: '联系方式不能为空', trigger: 'blur' }
                    ],
                    enabled: [
                       { required: true, message: '状态不能为空', trigger: 'blur' }
                    ],
                    remark: [
                        { required: true, message: '请输入备注', trigger: 'blur' }
                    ]
                },
                columns2: [
                    {
                        title: '用户名称',
                        key: 'name',
                        // width: 100,
                        // fixed: 'left'
                    },
                    {
                        title: '角色名称',
                        key: 'roleName',
                        // width: 100
                    },
                    {
                        title: '用户地址',
                        key: 'address',
                        // width: 100
                    },
                    {
                        title: '联系方式',
                        key: 'phone',
                        // width: 100
                    },
                    {
                        title: '用户状态',
                        key: 'enabled',
                        // width: 120
                    },
                     {
                        title: '备注',
                        key: 'remark',
                        // width: 100
                    },
                    {
                        title: '操作',
                        key: 'action',
                        // width: 200,
                        render: (h, params) => {
                            return h('div', [
                                h('Button', {
                                    props: {
                                        type: 'primary',
                                        size: 'small'
                                    },
                                    style:{
                                      marginRight:'3px'
                                    },
                                    on:{
                                      click: () => {
                                            this.changeUserInfo(params.row,params.index)
                                        }
                                    }
                                }, '编辑'),
                                h('Button', {
                                    style:{
                                        // height:'20px'
                                        marginRight:'3px'
                                    },
                                    props: {
                                        type: 'error',
                                        size: 'small',
                                    },
                                    on:{
                                      click: () =>{
                                        this.deletaUserInfo(params.index)
                                      }
                                    }
                                }, '删除')
                            ]);
                        }
                    }
                ],
                data3: []
            }
        },
  computed: {
    reshuserLength () {
      return this.data3.length
    }
  },
  methods: {
    changePage (index) {
     let start_in = (index-1)*this.pageSize;
     let end_in = index*this.pageSize;
     this.testCol = this.data3.slice(start_in,end_in);
     this.deleteIndex = index;
    },
    //用户信息编辑
    changeUserInfo (row,index) {
     this.modal1 = true;
     this.$store.commit('saveEidt',index);
    //  this.changeForm
    let {name,roleName,address,phone,homepage,remark} = row ;
        this.changeForm.name = name;
        this.changeForm.roleName = roleName;
        this.changeForm.address = address;
        this.changeForm.phone = phone;
        // this.changeForm.homepage = homepage;
        this.changeForm.remark = remark;
        // this.taIndex = indexs
    },
    // 删除用户操作
    deletaUserInfo (index) {
      let that = this;
      this.$Modal.confirm({
        title: '提示',
        content:`你确定要删除${this.testCol[index].name}基本资料信息？`,
        okText: '确定',
        cancelText: '取消',
        onOk:function(){
          let userId = that.testCol[index].id;
          console.log(userId)
          this.postRequest("/user/deleteUser",{
            id:userId
          }).then(res=>{
            // console.log(res)
            let statu = res.data.status;
            if(statu === "success"){
                that.testCol.splice(index,1);
                let start = (that.deleteIndex-1)*that.pageSize+index;
                console.log(start)
                that.data3.splice(start,1);
                // console.log(that.data3.length)
                this.$Message.success('删除用户成功');
            }else{
              this.$Message.success('删除用户失败');
            }
          })
        
        }
      })
    },
    ok (data) {
      let that = this;  //将组件实例对象改为that
      // this.$Message.info('编辑信息已保存');
      let index = this.$store.state.edit;
    //   this.$refs[name].validate((valid) => {
        if (true) {
            let {name,roleName,address,phone,enabled,homepage,remark} = that.changeForm;
            that.testCol[index].name = name;
            that.testCol[index].roleName = roleName;
            that.testCol[index].address = address;
            that.testCol[index].phone = phone;
            that.testCol[index].enabled = enabled;
            that.testCol[index].remark = remark;
            this.postRequest('/user/updateUser',{
                id:that.testCol[index].id,
                name:that.testCol[index].name
            }).then(res=>{
                // console.log(res)
                let status = res.data.status;
                if(status === 'success'){
                    this.$Message.success('保存成功');
                } else {
            this.$Message.error('信息保存失败');
                }
            })
        } 
       
    //   })
    },
    cancel () {
      this.$Message.info('取消编辑');
    },
    addUser () {
     this.modal2 = true;
    },
    //确认添加用户信息
    addUserOk (data) {
    let that = this;
    let {name,password,roleName,address,phone,remark} = data;
    this.postRequest("/user/addUser",{
      name:name,
      password:password,
      roleName:roleName,
      address:address,
      phone:phone,
      remark:remark
     }).then(res=>{
      that.addUserInfo.name = '';
      that.addUserInfo.password = '';
      that.addUserInfo.password = '';
      that.addUserInfo.roleName = '';
      that.addUserInfo.address = '';
      that.addUserInfo.phone = '';
      that.addUserInfo.remark = '';
       console.log(res.data)
       let status = res.data.status;
    //    let data = res.date;
       if(status === 'success'){
        let data = res.data.date;
        let {name,address,phone,enabled,homepage,remark,id} = data;
        // let roleN = data.roles;
        // console.log(roleN)
        // let ro = []
        //   roleN.forEach(function(item){
        //     ro.push(item.nameZh)
        // })
        // let r = ro.join('/')
        this.$nextTick(function(){
          this.data3.push({id:id,name:name,address:address,phone:phone,remark:remark})
         this.$Message.info('添加用户成功');
        })
        
       }else{
       this.$Message.info('添加用户失败')
       }
     })
    },
    addUserCancel () {
      this.$Message.info('取消添加')
    },
    //初始化用户信息列表
    initUserTable () {
    let that = this
    this.getRequest('/user/allUsers').then((res)=>{
      let data = res.data;
      data.forEach(function(item,index){
        let {name,address,phone,enabled,homepage,remark,id} = item
        let roleN = item.roles;
        let ro = []
          roleN.forEach(function(item){
            ro.push(item.nameZh)
        })
        let r = ro.join('/')
        that.data3.push({id:id,name:name,roleName:r,address:address,phone:phone,enabled:enabled,homepage:homepage,remark:remark})        
      })
        
      this.testCol = this.data3.slice(0,4)
    })
    },
    //查找用户
    serach ()  {
      let name = this.searchValue;
      let userId = "";
      for(let i=0;i<this.data3.length;i++){
        let dname = this.data3[i].name;
        if(name == dname){
          userId = this.data3[i].id
        }
      }
      // console.log(userId)
      this.postRequest("/user/findUser",{
        id:userId
      }).then(res=>{
        let status = res.status;
        // console.log(res)
        if(status == '200'){
        // console.log("lll")
        let data= res.data;
        let {name,address,phone,enabled,homepage,remark,id} = data;
        let roleN = data.roles;
        let ro = []
          roleN.forEach(function(item){
            ro.push(item.nameZh)
        })
        let r = ro.join('/')
        this.testCol = [];
        this.testCol.push({id:id,name:name,roleName:r,address:address,phone:phone,enabled:enabled,homepage:homepage,remark:remark})
        }else{
          this.$Message.info("该用户不存在")
        
        }
      })
    },
    // 用户密码修改
    changePwd (data,index) {
     let that = this;
     that.changepwd.name = data.name;
     that.modal3 = true;
    },
    // 用户密码确认修改
    surechangePwd (vali,data) {
      let that = this;
      let name = data.name;
      let oldpwd = data.oldpwd;
      let newpwd = data.newpwd;
      console.log(this.$refs[vali].validate())
      this.$refs[vali].validate((valid) => {
          if (valid) {
              this.postRequest("user/updatePassword",{
                username:name,
                oldpassword:oldpwd,
                newpassword:newpwd,
              }).then(res=>{
                that.changepwd.name = '';
                that.changepwd.oldpwd = '';
                that.changepwd.newpwd = '';
                that.changepwd.surepwd = '';
                let status = res.data.status;
                if(status === 'success'){
                  this.$Message.info("密码修改成功");
                }else{
                  this.$Message.info("密码修改失败")
                }
              }).catch(error=>{
                this.$Message.info(error)
              })
          } else {
              this.$Message.error('密码修改失败');
          }
      })
    }
  },
  mounted () {
    this.initUserTable()
  }
}
</script>

<style scoped>
.con{
  width: 100%;
  height: 100%;
  padding:10px;
}
.con_emp{
  font-size:20px;
  color:#fff;
  text-align: left;
  font-weight: normal
}
.con_icon{
 width: 100%;
 height: 40px;
 line-height: 40px;
 /* background:#000 */
}
.con_table{
  width:100%;
  height: 400px;
  background: transparent
  /* background: #0f0 */
}
.nameF{
  font-size: 16px
}
.wrapC{
  height:40px;
  float:left;
  margin-left: 20px;
}
.fo{
  width: 100%;
}
.fo_input{
  width: 70%;
}
</style>

